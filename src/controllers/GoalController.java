package controllers;

import java.net.URL;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.util.ResourceBundle;

import application.DatabaseConnection;
import application.EternalGoal;
import application.Master;
import dialogs.ErrDialog;
import dialogs.InfoDialog;
import javafx.event.ActionEvent;
import javafx.fxml.FXML;
import javafx.fxml.Initializable;
import javafx.scene.control.Button;
import javafx.scene.control.ButtonType;
import javafx.scene.control.DatePicker;
import javafx.scene.control.Label;
import javafx.scene.control.RadioButton;
import javafx.scene.control.ToggleGroup;

public class GoalController extends MasterController implements Initializable {

	/**
	 * 登録できる最大の目標数
	 */
	private int maxAmount = 4;


	@FXML
	private Button editBtn;
	@FXML
	private Button delBtn;
	@FXML
	private Button addBtn;
	@FXML
	private Label time1;
	@FXML
	private Label CoinName1;
	@FXML
	private Label CoinName3;
	@FXML
	private Label time3;
	@FXML
	private Label CoinName2;
	@FXML
	private Label time2;
	@FXML
	private Label CoinName4;
	@FXML
	private Label time4;
	@FXML
    private RadioButton everyDayRadio;

    @FXML
    private RadioButton oneDayRadio;

    @FXML
    private ToggleGroup goals;
    @FXML
    private RadioButton goalRadio1;
    @FXML
    private RadioButton goalRadio2;
    @FXML
    private RadioButton goalRadio3;
    @FXML
    private RadioButton goalRadio4;
	@FXML
	private DatePicker date;

	private Label[] nameLabels;

	private Label[] timeLabels;

	private RadioButton[] goalRadios;

	private EternalGoal[] eternalGoals;

	private String[] columnNames = {"ID","Amount","Date","CoinID"};

	/*
	 * 編集ボタン
	 */
	@FXML
	public void onEditBtn(ActionEvent event) {
		// TODO Autogenerated
		int index;
		boolean flag = false;
		for(index = 0;index < maxAmount;index++) {
			if(goalRadios[index].isSelected()) {
				flag = true;
				break;
			}
		}
		if(flag) {
			EternalGoal.nowEdit = eternalGoals[index];
			Master.newStage(400, 150, "更新", "FXML/EternalGoalEdit.fxml");
			EternalGoal.nowEdit = null;
			load();

		}
		else {
			ErrDialog.noSelectedErr();
		}
	}
	/*
	 * 削除ボタン
	 */
	@FXML
	public void onDelBtn(ActionEvent event) {
		// TODO Autogenerated
		int index;
		boolean flag = false;
		for(index = 0;index < maxAmount;index++) {
			if(goalRadios[index].isSelected()) {
				flag = true;
				break;
			}
		}
		if(flag) {
			if(InfoDialog.deleteCheckDialog(eternalGoals[index].getCoinName()).get() == ButtonType.YES) {
				eternalGoals[index].delete();
				load();
			}
		}
		else {
			ErrDialog.noSelectedErr();
		}
	}
	@FXML
	public void onAddBtn(ActionEvent event) {
		// TODO Autogenerated
		Master.newStage(400, 150, "目標追加", "FXML/EternalGoalAdd.fxml");
		load();
	}
	// Event Listener on ComboBox[#modeSelect].onAction
	@FXML
	public void onModeSelect(ActionEvent event) {
		// TODO Autogenerated
	}

	@FXML
	public void onDate(ActionEvent event) {
		// TODO Autogenerated
	}

	@FXML
    void onEvDayR(ActionEvent event) {
		date.setDisable(true);
    }

    @FXML
    void onOneDayR(ActionEvent event) {
    	date.setDisable(false);
    }
	/*
	 * 表示非表示切替
	 */
	private void setVisible(boolean f,int index) {
		nameLabels[index].setVisible(f);
		timeLabels[index].setVisible(f);
		goalRadios[index].setVisible(f);

	}
	/**
	 * 一行作る
	 * @param eg 作るEternalGoalインスタンス
	 * @param index
	 */
	private void makeLine(EternalGoal eg,int index) {
		nameLabels[index].setText(eg.getCoinName());
		timeLabels[index].setText((eg.getAmount() / 60) + "時間" + (eg.getAmount() % 60) + "分");
		setVisible(true, index);
	}

	private void load() {
		Label[] nameLabels = {CoinName1,CoinName2,CoinName3,CoinName4};

		Label[] timeLabels = {time1,time2,time3,time4};

		RadioButton[] goalRadios = {goalRadio1,goalRadio2,goalRadio3,goalRadio4};


		this.nameLabels = nameLabels;
		this.timeLabels = timeLabels;
		this.goalRadios = goalRadios;

		///////////////////////////////////////////////////////////

		eternalGoals = new EternalGoal[maxAmount];
		everyDayRadio.setSelected(true);
		date.setDisable(true);



		for(int i = 0;i < maxAmount;i++) {//いったんすべて非表示に
			setVisible(false, i);
		}


		try {
			DatabaseConnection db = new DatabaseConnection(databaseFilePath);
			ResultSet count = db.select("select count(*) from EternalGoal");
			ResultSet goals = db.select("select * from EternalGoal");
			count.next();
			int num = count.getInt(1);
			int cnt = 1;
			goals.next();
			while(cnt <= maxAmount) {
				if(cnt <= num) {
					eternalGoals[cnt - 1] = new EternalGoal();
					eternalGoals[cnt - 1].set(goals.getInt(columnNames[0]),
												goals.getInt(columnNames[1]),
												goals.getInt(columnNames[3])
												);
					makeLine(eternalGoals[cnt - 1], cnt - 1);
					goals.next();
				}
				cnt++;
			}
			db.close();
			count.close();
			goals.close();
		} catch(SQLException e) {
			ErrDialog.databaseErr();
		}
	}

	@Override
	public void initialize(URL location, ResourceBundle resources) {
		// fxidを配列に格納 ////////////////////////////////////////

		load();
	}
}
